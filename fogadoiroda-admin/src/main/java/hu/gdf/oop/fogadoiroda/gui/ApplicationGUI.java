package hu.gdf.oop.fogadoiroda.gui;

import hu.gdf.oop.fogadoiroda.data.entity.User;
import hu.gdf.oop.fogadoiroda.data.repository.UserRepository;

import javax.swing.*;
import java.awt.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @author marci
 */
public class ApplicationGUI extends javax.swing.JFrame {

    public static User loggedInUser;

    private ApplicationCallback callback = new ApplicationCallback() {

        @Override
        public void showNotification(String message) {
            internalShowNotification(message);
        }

        @Override
        public void showWarning(String message) {
            internalShowWarning(message);
        }

        @Override
        public void startProgressBar() {
            internalStartProgressBar();
        }

        @Override
        public void stopProgressBar() {
            internalStopProgressBar();
        }
    };

    /**
     * Creates new form ApplicationGUI
     */
    public ApplicationGUI() {
        initComponents();
        userRepository = new UserRepository();
        ((CardLayout) mainPanel.getLayout()).show(mainPanel, "card2");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        userRepository = new hu.gdf.oop.fogadoiroda.data.repository.UserRepository();
        statusBarPanel = new javax.swing.JPanel();
        infoMessagePanel = new javax.swing.JPanel();
        lInfoMessage = new javax.swing.JLabel();
        progressBarPanel = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        usernamePanel = new javax.swing.JPanel();
        lUserLoggedIn = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lLogin = new javax.swing.JLabel();
        lPassword = new javax.swing.JLabel();
        tfLogin = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usersPanel = new UsersPanel(callback);
        betEventsPanel = new BetEventsPanel(callback);
        mBar = new javax.swing.JMenuBar();
        mFile = new javax.swing.JMenu();
        mLogout = new javax.swing.JMenuItem();
        mExit = new javax.swing.JMenuItem();
        mTables = new javax.swing.JMenu();
        mUsers = new javax.swing.JMenuItem();
        mBetEvents = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fogadóiroda backoffice alkalmazás");

        statusBarPanel.setPreferredSize(new java.awt.Dimension(809, 26));
        statusBarPanel.setLayout(new java.awt.GridBagLayout());

        infoMessagePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        infoMessagePanel.setPreferredSize(new java.awt.Dimension(260, 26));
        infoMessagePanel.setLayout(new java.awt.GridBagLayout());

        lInfoMessage.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lInfoMessage.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        infoMessagePanel.add(lInfoMessage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        statusBarPanel.add(infoMessagePanel, gridBagConstraints);

        progressBarPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        progressBarPanel.setMaximumSize(new java.awt.Dimension(170, 26));
        progressBarPanel.setMinimumSize(new java.awt.Dimension(170, 26));
        progressBarPanel.setPreferredSize(new java.awt.Dimension(170, 26));
        progressBarPanel.setLayout(new java.awt.GridBagLayout());

        jProgressBar1.setMaximumSize(new java.awt.Dimension(160, 20));
        jProgressBar1.setMinimumSize(new java.awt.Dimension(160, 20));
        jProgressBar1.setPreferredSize(new java.awt.Dimension(160, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        progressBarPanel.add(jProgressBar1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        statusBarPanel.add(progressBarPanel, gridBagConstraints);

        usernamePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        usernamePanel.setPreferredSize(new java.awt.Dimension(100, 26));
        usernamePanel.setLayout(new java.awt.GridBagLayout());

        lUserLoggedIn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lUserLoggedIn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lUserLoggedIn.setMaximumSize(new java.awt.Dimension(100, 20));
        lUserLoggedIn.setMinimumSize(new java.awt.Dimension(100, 20));
        lUserLoggedIn.setPreferredSize(new java.awt.Dimension(100, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        usernamePanel.add(lUserLoggedIn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        statusBarPanel.add(usernamePanel, gridBagConstraints);

        getContentPane().add(statusBarPanel, java.awt.BorderLayout.SOUTH);

        mainPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        mainPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Bejelentkezés"));
        loginPanel.setMinimumSize(new java.awt.Dimension(0, 0));

        lLogin.setText("Login:");

        lPassword.setText("Jelszó:");

        tfLogin.setPreferredSize(new java.awt.Dimension(150, 26));

        pfPassword.setPreferredSize(new java.awt.Dimension(150, 26));
        pfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pfPasswordKeyPressed(evt);
            }
        });

        btnLogin.setText("Belépés");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });

        jLabel1.setText("Kérjük adja meg a belépési adatait!");

        jLabel2.setForeground(java.awt.Color.red);
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(jLabel1))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(lLogin)
                                                .addGap(82, 82, 82)
                                                .addComponent(tfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lPassword)
                                                .addGap(80, 80, 80)
                                                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(46, 46, 46)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(btnLogin)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(btnReset)))))
                                .addGap(155, 155, 155))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(lLogin))
                                        .addComponent(tfLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(lPassword))
                                        .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnLogin)
                                        .addComponent(btnReset))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
                loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(357, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
                loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(loginPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(223, Short.MAX_VALUE))
        );

        mainPanel.add(loginPanel, "login");

        usersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Felhasználók"));
        mainPanel.add(usersPanel, "users");

        betEventsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Események"));
        betEventsPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        mainPanel.add(betEventsPanel, "betEvents");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        mFile.setText("Fájl");

        mLogout.setText("Kijelentkezés");
        mLogout.setEnabled(false);
        mLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mLogoutActionPerformed(evt);
            }
        });
        mFile.add(mLogout);

        mExit.setText("Kilépés");
        mExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mExitActionPerformed(evt);
            }
        });
        mFile.add(mExit);

        mBar.add(mFile);

        mTables.setText("Táblák");

        mUsers.setText("Felhasználók");
        mUsers.setEnabled(false);
        mUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mUsersActionPerformed(evt);
            }
        });
        mTables.add(mUsers);

        mBetEvents.setText("Fogadások");
        mBetEvents.setEnabled(false);
        mBetEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBetEventsActionPerformed(evt);
            }
        });
        mTables.add(mBetEvents);

        mBar.add(mTables);

        setJMenuBar(mBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mUsersActionPerformed

        callback.startProgressBar();

        new SwingWorker<Integer, Void>() {
            @Override
            protected Integer doInBackground() throws Exception {
                internalShowNotification("");
                usersPanel.loadData();
                ((CardLayout) mainPanel.getLayout()).show(mainPanel, "users");
                return 1;
            }

            @Override
            protected void done() {
                callback.stopProgressBar();
            }
        }.execute();
    }//GEN-LAST:event_mUsersActionPerformed

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        tfLogin.setText("");
        pfPassword.setText("");
    }//GEN-LAST:event_btnResetMouseClicked

    private void mBetEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBetEventsActionPerformed

        callback.startProgressBar();

        new SwingWorker<Integer, Void>() {
            @Override
            protected Integer doInBackground() throws Exception {
                internalShowNotification("");
                betEventsPanel.loadData();
                ((CardLayout) mainPanel.getLayout()).show(mainPanel, "betEvents");
                return 1;
            }

            @Override
            protected void done() {
                callback.stopProgressBar();
            }
        }.execute();
    }//GEN-LAST:event_mBetEventsActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        doLogin();
    }//GEN-LAST:event_btnLoginActionPerformed

    private void mLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mLogoutActionPerformed

        callback.startProgressBar();

        mLogout.setEnabled(false);
        mUsers.setEnabled(false);
        mBetEvents.setEnabled(false);
        jLabel2.setVisible(false);

        new SwingWorker<Integer, Void>() {
            @Override
            protected Integer doInBackground() throws Exception {
                loggedInUser = null;
                ((CardLayout) mainPanel.getLayout()).show(mainPanel, "login");
                internalShowNotification("Sikeres kilépés");
                lUserLoggedIn.setText("");
                return 1;
            }

            @Override
            protected void done() {
                callback.stopProgressBar();
            }
        }.execute();

    }//GEN-LAST:event_mLogoutActionPerformed

    private void mExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mExitActionPerformed

    private void pfPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pfPasswordKeyPressed
        if (evt.getKeyCode() == 10) {
            doLogin();
        }
    }//GEN-LAST:event_pfPasswordKeyPressed

    private void doLogin() {

        callback.startProgressBar();

        tfLogin.setEnabled(false);
        pfPassword.setEnabled(false);
        btnLogin.setEnabled(false);
        btnReset.setEnabled(false);

        String username = tfLogin.getText();
        String passString = new String(pfPassword.getPassword());

        new SwingWorker<Integer, Void>() {

            @Override
            protected Integer doInBackground() {
                try {
                    Thread.sleep(500);
                    loggedInUser = userRepository.login(username, passString);
                    if (loggedInUser != null) {
                        if ("OPERATOR".equals(loggedInUser.getAuthority())) {
                            if (loggedInUser.isActive()) {
                                lUserLoggedIn.setText(username);
                                internalShowNotification("Sikeres belépés");
                                jLabel2.setText("");
                                mLogout.setEnabled(true);
                                mUsers.setEnabled(true);
                                mBetEvents.setEnabled(true);
                                tfLogin.setText("");
                                pfPassword.setText("");
                            } else {
                                loggedInUser = null;
                                jLabel2.setForeground(Color.RED);
                                jLabel2.setText("Inaktív státuszú felhasználó!");
                            }
                        } else {
                            loggedInUser = null;
                            jLabel2.setForeground(Color.RED);
                            jLabel2.setText("Az admin alkalmazásba csak operátorok léphetnek be!");
                        }
                    } else {
                        jLabel2.setForeground(Color.RED);
                        jLabel2.setText("A megadott felhasználónév és/vagy jelszó érvénytelen!");
                    }
                } catch (Exception e) {
                    loggedInUser = null;
                    jLabel2.setForeground(Color.RED);
                    jLabel2.setText("A bejelentkezés közben hiba lépett fel!");
                }

                // restore controls
                jLabel2.setVisible(true);
                tfLogin.setEnabled(true);
                pfPassword.setEnabled(true);
                btnLogin.setEnabled(true);
                btnReset.setEnabled(true);
                return 1;
            }

            @Override
            protected void done() {
                callback.stopProgressBar();
            }
        }.execute();
    }

    private void internalShowNotification(String message) {
        lInfoMessage.setForeground(Color.BLACK);
        lInfoMessage.setText(message);
    }

    private void internalShowWarning(String message) {
        lInfoMessage.setForeground(Color.RED);
        lInfoMessage.setText(message);
    }

    private void internalStartProgressBar() {
        jProgressBar1.setIndeterminate(true);
        jProgressBar1.setValue(0);
    }

    private void internalStopProgressBar() {
        jProgressBar1.setIndeterminate(false);
        jProgressBar1.setValue(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ApplicationGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private hu.gdf.oop.fogadoiroda.gui.BetEventsPanel betEventsPanel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnReset;
    private javax.swing.JPanel infoMessagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel lInfoMessage;
    private javax.swing.JLabel lLogin;
    private javax.swing.JLabel lPassword;
    private javax.swing.JLabel lUserLoggedIn;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JMenuBar mBar;
    private javax.swing.JMenuItem mBetEvents;
    private javax.swing.JMenuItem mExit;
    private javax.swing.JMenu mFile;
    private javax.swing.JMenuItem mLogout;
    private javax.swing.JMenu mTables;
    private javax.swing.JMenuItem mUsers;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JPanel progressBarPanel;
    private javax.swing.JPanel statusBarPanel;
    private javax.swing.JTextField tfLogin;
    private hu.gdf.oop.fogadoiroda.data.repository.UserRepository userRepository;
    private javax.swing.JPanel usernamePanel;
    private hu.gdf.oop.fogadoiroda.gui.UsersPanel usersPanel;
    // End of variables declaration//GEN-END:variables
}
